<?xml version="1.0" encoding="utf-8" ?>
<!--
    DI container definition - Basic Slim V3 Usage

    Copy this to your configuration directory

    Use the <imports> directive to include this in your DIC definition
-->
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <!-- You should not alter the service definitions, alter these parameters if required
        There are exceptions -see comments below
        -->
        <parameter key="slim.config.httpVersion" type="string">1.1</parameter>
        <parameter key="slim.config.outputBuffering">append</parameter>
        <parameter key="slim.config.determineRouteBeforeAppMiddleware">false</parameter>
        <parameter key="slim.config.displayErrorDetails">false</parameter>
        <parameter key="slim.config.response.defaultContentType">text/html; charset=UTF-8</parameter>
        <parameter key="slim.config.response.defaultStatus">200</parameter>
        <parameter key="slim.config.response.chunkSize">4096</parameter>

        <!-- You may want to add/amend these response headers for your application -->
        <parameter key="slim.config.response.defaultheaders" type="collection">
            <parameter key="Content-Type">%slim.config.response.defaultContentType%</parameter>
        </parameter>

        <!-- These are default classes as used by Slim. Change at your own risk -->
        <parameter key="slim.config.className.settings">Slim\Collection</parameter>
        <parameter key="slim.config.className.environment">Slim\Http\Environment</parameter>
        <parameter key="slim.config.className.request">Slim\Http\Request</parameter>
        <parameter key="slim.config.className.response">Slim\Http\Response</parameter>
        <parameter key="slim.config.className.headers">Slim\Http\Headers</parameter>
        <parameter key="slim.config.className.router">Slim\Router</parameter>
        <parameter key="slim.config.className.foundHandler">Slim\Handlers\Strategies\RequestResponse</parameter>
        <parameter key="slim.config.className.notFoundHandler">Slim\Handlers\NotFound</parameter>
        <parameter key="slim.config.className.errorHandler">Slim\Handlers\Error</parameter>
        <parameter key="slim.config.className.notAllowedHandler">Slim\Handlers\NotAllowed</parameter>
        <parameter key="slim.config.className.callableResolver">Slim\CallableResolver</parameter>
    </parameters>

    <!-- Unfortunately Slim is not namespacing its required configuration.  Hence you must
    be careful not to use the following service names yourself-->
    <services>
        <service id="settings" class="%slim.config.className.settings%">
            <argument type="collection">
                <argument key="httpVersion">%slim.config.httpVersion%</argument>
                <argument key="responseChunkSize">%slim.config.response.chunkSize%</argument>
                <argument key="outputBuffering">%slim.config.outputBuffering%</argument>
                <argument key="determineRouteBeforeAppMiddleware">%slim.config.determineRouteBeforeAppMiddleware%</argument>
                <argument key="displayErrorDetails">%slim.config.displayErrorDetails%</argument>
            </argument>
        </service>

        <!-- This fudge is to load the value of php $_SERVER into the environment.
        In development, you might want load a static server config by replacing
        the argument type with 'collection' and supplying your own parameters -->
        <service id="environment" class="%slim.config.className.environment%">
            <argument type="service">
                <service class="stdObject"
                    factory-class="Slimdic\Dic\Builder"
                    factory-method="getServerConfig">
                </service>
            </argument>
        </service>

        <service id="request" class="%slim.config.className.request%"
            factory-class="%slim.config.className.request%"
            factory-method="createFromEnvironment">
            <argument type="service" id="environment"/>
        </service>

        <service id="response" class="%slim.config.className.response%">
            <argument>%slim.config.response.defaultStatus%</argument>
            <argument type="service">
                <service class="%slim.config.className.headers%">
                    <argument>%slim.config.response.defaultheaders%</argument>
                </service>
            </argument>
            <call method="withProtocolVersion">
                <argument>%slim.config.httpVersion%</argument>
            </call>
        </service>

        <service id="router" class="%slim.config.className.router%"/>

        <service id="foundHandler" class="%slim.config.className.foundHandler%"/>

        <service id="errorHandler" class="%slim.config.className.errorHandler%">
            <argument>%slim.config.displayErrorDetails%</argument>
        </service>

        <service id="notFoundHandler" class="%slim.config.className.notFoundHandler%"/>

        <service id="notAllowedHandler" class="%slim.config.className.notAllowedHandler%"/>

        <service id="callableResolver" class="%slim.config.className.callableResolver%">
            <argument type="expression">container</argument>
        </service>

    </services>
</container>